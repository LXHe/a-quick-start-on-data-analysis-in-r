[["数据导入导出与预处理.html", "第2章 数据导入、导出与预处理 2.1 数据导入 2.2 数据导出 2.3 路径", " 第2章 数据导入、导出与预处理 2.1 数据导入 2.1.1 CSV文件读取 CSV（comma-separated values）文件是以.csv结尾的文件，文件中的数据以,分隔，每一行代表一条记录。如 读取csv文件或者以类似格式存储数据的txt文件时，可以使用read.csv()函数。 注意：在输入文件路径时，需要使用\\\\或者/。 # 读取数据 wine_df &lt;- read.csv(&quot;data/wine.csv&quot;) # 或者 read.csv(&quot;data\\\\wine.csv&quot;) # 显示前5行记录 head(wine_df, 5) ## X1 X14.23 X1.71 X2.43 ## 1 1 13.20 1.78 2.14 ## 2 1 13.16 2.36 2.67 ## 3 1 14.37 1.95 2.50 ## 4 1 13.24 2.59 2.87 ## 5 1 14.20 1.76 2.45 在上例中可以看到，read.csv()默认将第一行记录读取为变量名。如果不将第一行读取为变量名 ，可以声明参数header=FALSE，这时，变量名将自动生成（“V1”,“V2”…）。 # 读取数据 wine_df &lt;- read.csv(&quot;data/wine.csv&quot;, header=FALSE) # 显示前5行记录 head(wine_df, 5) ## V1 V2 V3 V4 ## 1 1 14.23 1.71 2.43 ## 2 1 13.20 1.78 2.14 ## 3 1 13.16 2.36 2.67 ## 4 1 14.37 1.95 2.50 ## 5 1 13.24 2.59 2.87 有些文件中的数据会以,当做千位分隔符，数据以;分隔，这时可以用read.csv2()函数。 # 读取数据 revenue_df &lt;- read.csv2(&quot;data/revenue.txt&quot;) # 显示前5行记录 head(revenue_df, 5) ## company revenue other_income ## 1 A 10.114 2.102 ## 2 B 18.723 4.055 ## 3 C 20.266 6.314 ## 4 D 36.844 5.084 ## 5 E 59.711 9.430 2.1.2 excel文件读取 excel文件的读取可以使用readxl包的read_excel()函数。此函数默认读取第一个工作表，如果需要读取特定工作表，可以声明sheet变量。 library(readxl) goods_df &lt;- read_excel(&quot;data/goods.xlsx&quot;) head(goods_df,5) ## # A tibble: 5 × 3 ## country continent amount ## &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 Afghanistan Asia 11 ## 2 Albania Europe 30 ## 3 Algeria Africa 49 ## 4 Andorra Europe 55 ## 5 Bahrain Asia 20 读取一个excel文件中的多个工作表。 sheets &lt;- excel_sheets(&quot;data/goods.xlsx&quot;) # 返回&quot;goods.xlsx&quot;工作表名称 multi_df &lt;- lapply(sheets, function(x){read_excel(&quot;data/goods.xlsx&quot;, sheet=x)}) # 读取每个工作表为数据框并返回列表 names(multi_df) &lt;- sheets # 给列表的元素命名 length(multi_df) # 查看生成的列表长度（每个元素对应一个工作表） ## [1] 5 head(multi_df$Year2020,3) # 查看Year2020工作表对应的数据 ## # A tibble: 3 × 3 ## country continent amount ## &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 Afghanistan Asia 11 ## 2 Albania Europe 30 ## 3 Algeria Africa 49 2.1.3 文件读取汇总 文件类型 调用包 读取函数 CSV文件（*.csv） utils（R自带） read.csv() TXT文件（*.txt） utils（R自带） read.csv() excel文件（*.xlsx或*.xls） readxl read_excel() SAS文件（*.sas7bdat） haven read.sas() SPSS文件（*.sav） haven read.sav() STATA文件（*.dta） haven read_dta() 2.2 数据导出 数据导出类型 导出时调用包 导出函数 读取时调用包 读取函数 R数据文件（*.Rdata） base（R自带） save() base（R自带） load() CSV文件（*.csv） utils（R自带） write.csv() utils（R自带） read.csv() 自定义文件（*.csv或*.txt） utils（R自带） write.table() utils（R自带） read.csv() excel文件（*.xlsx） WriteXLS WriteXLS() readxl read_excel() # 将goods_df导出为goods.csv文件，导出位置为D盘 write.csv(goods_df, &quot;D:/goods.csv&quot;, row.names=FALSE) # row.names=FALSE时将不会导出数据索引值 2.3 路径 我们在读取文件时，可以使用文件完整的存储路径，比如D:/a-quick-start-on-data-analysis-in-r/data/goods.xlsx，它能帮助我们找到任意位置上的文件，这条路径被称绝对路径（absolute directory）。 有时，文件的绝对路径很长，而且我们需要处理的文件一般都集中在特定文件夹下，这时，为了避免代码冗长，我们可以先设定一个工作路径，告诉R在查找文件时只查找存储在这个工作路径下的文件。这样，当我们要调用特定文件时，只需要调用该文件在当前工作路径下的路径，这条路径被称为相对路径（relative directory）。例如，当我们将D:/a-quick-start-on-data-analysis-in-r设置为工作路径，这时，如果要调用goods.xlsx，只需要输入路径data/goods.xlsx即可。 我们可以使用getwd()函数来获取当前的工作路径，使用setwd()设置新的工作路径。 注意： 在设置了工作路径后，数据或图片的存储与读取都会默认在该工作路径下进行。 需要读取存储在其它路径的数据时，需要使用绝对路径。 有时，我们需要对特定文件夹下面的特定类型（或者特定名称）文件进行批量读取，可以通过list.files()函数实现。 # 获取data文件夹下的所有txt文件名 file_names &lt;- list.files(path=&quot;data&quot;, pattern=&quot;\\\\.txt&quot;) file_names ## [1] &quot;revenue.txt&quot; &quot;revenue2.txt&quot; &quot;revenue3.txt&quot; "]]
